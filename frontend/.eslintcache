[{"/home/achyuth/Documents/geekcart/frontend/src/index.js":"1","/home/achyuth/Documents/geekcart/frontend/src/App.js":"2","/home/achyuth/Documents/geekcart/frontend/src/store.js":"3","/home/achyuth/Documents/geekcart/frontend/src/reducers/productReducer.js":"4","/home/achyuth/Documents/geekcart/frontend/src/constants/productConstants.js":"5","/home/achyuth/Documents/geekcart/frontend/src/actions/productActions.js":"6","/home/achyuth/Documents/geekcart/frontend/src/components/Footer.js":"7","/home/achyuth/Documents/geekcart/frontend/src/components/Header.js":"8","/home/achyuth/Documents/geekcart/frontend/src/screens/Home.js":"9","/home/achyuth/Documents/geekcart/frontend/src/components/Product.js":"10","/home/achyuth/Documents/geekcart/frontend/src/components/Loader.js":"11","/home/achyuth/Documents/geekcart/frontend/src/screens/ProductScreen.js":"12","/home/achyuth/Documents/geekcart/frontend/src/components/Message.js":"13","/home/achyuth/Documents/geekcart/frontend/src/reducers/userReducer.js":"14","/home/achyuth/Documents/geekcart/frontend/src/constants/userConstants.js":"15","/home/achyuth/Documents/geekcart/frontend/src/screens/Login.js":"16","/home/achyuth/Documents/geekcart/frontend/src/components/FormContainer.js":"17","/home/achyuth/Documents/geekcart/frontend/src/actions/userActions.js":"18","/home/achyuth/Documents/geekcart/frontend/src/screens/Register.js":"19","/home/achyuth/Documents/geekcart/frontend/src/screens/ProfileScreen.js":"20","/home/achyuth/Documents/geekcart/frontend/src/screens/UserListScreen.js":"21","/home/achyuth/Documents/geekcart/frontend/src/screens/ProductListScreen.js":"22","/home/achyuth/Documents/geekcart/frontend/src/screens/ProductEditScreen.js":"23","/home/achyuth/Documents/geekcart/frontend/src/components/ProgressBar.js":"24","/home/achyuth/Documents/geekcart/frontend/src/config/useStorage.js":"25","/home/achyuth/Documents/geekcart/frontend/src/config/firebase.js":"26","/home/achyuth/Documents/geekcart/frontend/src/reducers/cartReducers.js":"27","/home/achyuth/Documents/geekcart/frontend/src/constants/cartConstants.js":"28","/home/achyuth/Documents/geekcart/frontend/src/screens/CartScreen.js":"29","/home/achyuth/Documents/geekcart/frontend/src/actions/cartActions.js":"30","/home/achyuth/Documents/geekcart/frontend/src/screens/ShippingScreen.js":"31","/home/achyuth/Documents/geekcart/frontend/src/components/CheckOutSteps.js":"32","/home/achyuth/Documents/geekcart/frontend/src/screens/PaymentScreen.js":"33","/home/achyuth/Documents/geekcart/frontend/src/reducers/orderReducers.js":"34","/home/achyuth/Documents/geekcart/frontend/src/constants/orderConstants.js":"35","/home/achyuth/Documents/geekcart/frontend/src/screens/PlaceOrderScreen.js":"36","/home/achyuth/Documents/geekcart/frontend/src/actions/orderActions.js":"37","/home/achyuth/Documents/geekcart/frontend/src/screens/OrderScreen.js":"38","/home/achyuth/Documents/geekcart/frontend/src/screens/OrderListScreen.js":"39","/home/achyuth/Documents/geekcart/frontend/src/screens/UserEditScreen.js":"40","/home/achyuth/Documents/geekcart/frontend/src/components/Rating.js":"41","/home/achyuth/Documents/geekcart/frontend/src/components/ProductCarousel.js":"42"},{"size":358,"mtime":1607792892466,"results":"43","hashOfConfig":"44"},{"size":2193,"mtime":1608371769818,"results":"45","hashOfConfig":"44"},{"size":2002,"mtime":1608197637331,"results":"46","hashOfConfig":"44"},{"size":3494,"mtime":1608197611346,"results":"47","hashOfConfig":"44"},{"size":1496,"mtime":1608197567630,"results":"48","hashOfConfig":"44"},{"size":5101,"mtime":1608548076579,"results":"49","hashOfConfig":"44"},{"size":281,"mtime":1607792317994,"results":"50","hashOfConfig":"44"},{"size":2329,"mtime":1607881713493,"results":"51","hashOfConfig":"44"},{"size":1391,"mtime":1608199213788,"results":"52","hashOfConfig":"44"},{"size":832,"mtime":1608194924860,"results":"53","hashOfConfig":"44"},{"size":580,"mtime":1607933956872,"results":"54","hashOfConfig":"44"},{"size":7254,"mtime":1608548164459,"results":"55","hashOfConfig":"44"},{"size":297,"mtime":1607887967876,"results":"56","hashOfConfig":"44"},{"size":3159,"mtime":1608147809407,"results":"57","hashOfConfig":"44"},{"size":1369,"mtime":1608192314564,"results":"58","hashOfConfig":"44"},{"size":2136,"mtime":1607881983954,"results":"59","hashOfConfig":"44"},{"size":331,"mtime":1607868539146,"results":"60","hashOfConfig":"44"},{"size":6129,"mtime":1608194070610,"results":"61","hashOfConfig":"44"},{"size":2970,"mtime":1607881477560,"results":"62","hashOfConfig":"44"},{"size":5226,"mtime":1608192395043,"results":"63","hashOfConfig":"44"},{"size":2654,"mtime":1607927897957,"results":"64","hashOfConfig":"44"},{"size":3439,"mtime":1607936195106,"results":"65","hashOfConfig":"44"},{"size":6127,"mtime":1607968243492,"results":"66","hashOfConfig":"44"},{"size":437,"mtime":1607968157785,"results":"67","hashOfConfig":"44"},{"size":752,"mtime":1607952121738,"results":"68","hashOfConfig":"44"},{"size":634,"mtime":1607951971761,"results":"69","hashOfConfig":"44"},{"size":1175,"mtime":1608041270524,"results":"70","hashOfConfig":"44"},{"size":234,"mtime":1608040939822,"results":"71","hashOfConfig":"44"},{"size":3800,"mtime":1608051107321,"results":"72","hashOfConfig":"44"},{"size":1406,"mtime":1608051314496,"results":"73","hashOfConfig":"44"},{"size":2555,"mtime":1608051229349,"results":"74","hashOfConfig":"44"},{"size":1243,"mtime":1608051216533,"results":"75","hashOfConfig":"44"},{"size":1769,"mtime":1608052977028,"results":"76","hashOfConfig":"44"},{"size":3338,"mtime":1608145655526,"results":"77","hashOfConfig":"44"},{"size":1206,"mtime":1608145583798,"results":"78","hashOfConfig":"44"},{"size":5122,"mtime":1608140732280,"results":"79","hashOfConfig":"44"},{"size":4820,"mtime":1608146514345,"results":"80","hashOfConfig":"44"},{"size":9715,"mtime":1608193293739,"results":"81","hashOfConfig":"44"},{"size":2811,"mtime":1608147266841,"results":"82","hashOfConfig":"44"},{"size":3530,"mtime":1608194004772,"results":"83","hashOfConfig":"44"},{"size":1695,"mtime":1608194878460,"results":"84","hashOfConfig":"44"},{"size":1216,"mtime":1608199318328,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"rbi5us",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"/home/achyuth/Documents/geekcart/frontend/src/index.js",[],["179","180"],"/home/achyuth/Documents/geekcart/frontend/src/App.js",[],"/home/achyuth/Documents/geekcart/frontend/src/store.js",[],"/home/achyuth/Documents/geekcart/frontend/src/reducers/productReducer.js",[],"/home/achyuth/Documents/geekcart/frontend/src/constants/productConstants.js",[],"/home/achyuth/Documents/geekcart/frontend/src/actions/productActions.js",[],"/home/achyuth/Documents/geekcart/frontend/src/components/Footer.js",[],"/home/achyuth/Documents/geekcart/frontend/src/components/Header.js",[],"/home/achyuth/Documents/geekcart/frontend/src/screens/Home.js",[],"/home/achyuth/Documents/geekcart/frontend/src/components/Product.js",[],"/home/achyuth/Documents/geekcart/frontend/src/components/Loader.js",[],"/home/achyuth/Documents/geekcart/frontend/src/screens/ProductScreen.js",["181","182"],"/home/achyuth/Documents/geekcart/frontend/src/components/Message.js",[],"/home/achyuth/Documents/geekcart/frontend/src/reducers/userReducer.js",[],"/home/achyuth/Documents/geekcart/frontend/src/constants/userConstants.js",[],"/home/achyuth/Documents/geekcart/frontend/src/screens/Login.js",["183","184"],"import React, { useEffect, useState } from 'react'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { login } from '../actions/userActions'\nimport FormContainer from '../components/FormContainer'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\n\nconst Login = ({ location, history }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  const submitHandler = e => {\n    e.preventDefault()\n    dispatch(login(email, password))\n  }\n\n  useEffect(\n    _ => {\n      if (userInfo) {\n        history.push(redirect)\n      }\n    },\n    [history, userInfo, redirect]\n  )\n\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {/* {loading && <Loader />} */}\n      {/* {error && <Message variant='danger'>{error}</Message>} */}\n      {/* eslint-disable */}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter Email'\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter Password'\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Button type='submit' variant='primary'>\n          SignIn\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          New Customer ?\n          <Link to={redirect ? `/register?redirect=${redirect}` : `/register`}>\n            Register\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default Login\n","/home/achyuth/Documents/geekcart/frontend/src/components/FormContainer.js",[],"/home/achyuth/Documents/geekcart/frontend/src/actions/userActions.js",[],"/home/achyuth/Documents/geekcart/frontend/src/screens/Register.js",[],"/home/achyuth/Documents/geekcart/frontend/src/screens/ProfileScreen.js",[],"/home/achyuth/Documents/geekcart/frontend/src/screens/UserListScreen.js",[],"/home/achyuth/Documents/geekcart/frontend/src/screens/ProductListScreen.js",["185","186","187","188","189"],"import React, { useEffect, useState } from 'react'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listUsers } from '../actions/userActions'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nimport {\n  deleteProduct,\n  listProducts,\n  createProduct\n} from '../actions/productActions'\n\nconst ProductListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const productList = useSelector(state => state.productList)\n  const { loading, error, products } = productList\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  const productDelete = useSelector(state => state.productDelete)\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete\n  } = productDelete\n\n  const productCreate = useSelector(state => state.productCreate)\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct\n  } = productCreate\n\n  useEffect(() => {\n    if (!userInfo || userInfo.role === 0) {\n      history.push('/login')\n    }\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`)\n    } else {\n      dispatch(listProducts())\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate\n    // createdProduct\n  ])\n\n  const deleteHandler = id => {\n    if (window.confirm('are you sure')) {\n      dispatch(deleteProduct(id))\n    }\n  }\n\n  const createProductHandler = () => {\n    dispatch(createProduct())\n  }\n  return (\n    <>\n      <Row className='align-items-center'>\n        <Col>\n          <h1>Products</h1>\n        </Col>\n        <Col className='text-right'>\n          <Button className='my-3' onClick={createProductHandler}>\n            <i className='fas fa-plus px-1' />\n            Create Product\n          </Button>\n        </Col>\n      </Row>\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      {products && (\n        <Table striped boarded hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Price</th>\n              <th>Category</th>\n              <th>Brand</th>\n              <th>Edit</th>\n            </tr>\n          </thead>\n          <tbody>\n            {products.map(product => (\n              <tr key={product._id}>\n                <td>{product._id}</td>\n                <td>{product.name}</td>\n                <td>{product.price}</td>\n                <td>{product.category}</td>\n                <td>{product.brand}</td>\n                <td>\n                  <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                    <Button>\n                      <i className='fas fa-edit mx-2' />\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant='danger'\n                    className='btn-sm mx-2'\n                    onClick={() => deleteHandler(product._id)}\n                  >\n                    <i className='fas fa-trash' />\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default ProductListScreen\n","/home/achyuth/Documents/geekcart/frontend/src/screens/ProductEditScreen.js",["190","191"],"import React, { useState, useEffect } from 'react'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { AiOutlineArrowLeft } from 'react-icons/ai'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\nimport { listProductsDetails, updateProduct } from '../actions/productActions'\nimport { Form, Button } from 'react-bootstrap'\nimport ProgressBar from '../components/ProgressBar'\n\nconst ProductEditScreen = ({ match, history }) => {\n  const productId = match.params.id\n\n  const [name, setName] = useState('')\n  const [price, setPrice] = useState(0)\n  const [image, setImage] = useState('')\n  const [brand, setBrand] = useState('')\n  const [category, setCategory] = useState('')\n  const [countInStock, setCountInStock] = useState('')\n  // const [numReviews, setNumReviews] = useState('')\n  const [description, setDescription] = useState('')\n  const [uploading, setUploading] = useState(false)\n  const [uploadError, setUploadError] = useState('')\n\n  const [file, setFile] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector(state => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const productUpdate = useSelector(state => state.productUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = productUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET })\n      history.push('/admin/productlist')\n    } else {\n      if (!product || !product.name || product._id !== productId) {\n        dispatch(listProductsDetails(productId))\n      } else {\n        setName(product.name)\n        setPrice(product.price)\n        setImage(product.image)\n        setBrand(product.brand)\n        setCategory(product.category)\n        setCountInStock(product.countInStock)\n        setDescription(product.description)\n      }\n    }\n  }, [dispatch, history, productId, product, successUpdate])\n\n  const submitHandler = e => {\n    e.preventDefault()\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        description,\n        price,\n        image,\n        brand,\n        category,\n        countInStock\n      })\n    )\n  }\n\n  const uploadFileHandler = e => {\n    const selectedFile = e.target.files[0]\n    console.log(selectedFile)\n    const types = ['image/png', 'image/jpeg', 'image/jpg']\n\n    if (selectedFile && types.includes(selectedFile.type)) {\n      setFile(selectedFile)\n      setUploadError('')\n    } else {\n      setFile(null)\n      setUploadError('Please select an image file (png or jpg)')\n    }\n  }\n\n  return (\n    <>\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\n        <AiOutlineArrowLeft /> GoBack\n      </Link>\n      <h1>{name}</h1>\n      <FormContainer>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger' error={errorUpdate} />}\n\n        {loading && <Loader />}\n        {error && <Message variant='danger' error={error} />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId='name'>\n            <Form.Label> Name</Form.Label>;\n            <Form.Control\n              type='name'\n              placeholder='Please Enter Your Name'\n              value={name}\n              onChange={e => setName(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='price'>\n            <Form.Label>Price</Form.Label>\n            <Form.Control\n              type='number'\n              placeholder='Enter Price'\n              value={price}\n              onChange={e => setPrice(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='image'>\n            <Form.Label>Image</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Enter Image url '\n              value={image}\n              onChange={e => setImage(e.target.value)}\n            />\n\n            <Form.File\n              id='image-file'\n              label='Choose File'\n              custom\n              onChange={uploadFileHandler}\n            />\n            {file && <div>{file.name} </div>}\n            {file && (\n              <ProgressBar file={file} setFile={setFile} setImage={setImage} />\n            )}\n            {uploadError && <Message variant='danger' error={uploadError} />}\n\n            {/* <Form.File id=\"exampleFormControlFile1\" label=\"Example file input\" /> */}\n\n            {/* {uploading && <Loader /> }          */}\n          </Form.Group>\n          <Form.Group controlId='brand'>\n            <Form.Label>Brand</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Enter brand'\n              value={brand}\n              onChange={e => setBrand(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='category'>\n            <Form.Label>Category</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Enter Category'\n              value={category}\n              onChange={e => setCategory(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='countInStock'>\n            <Form.Label>countInStock</Form.Label>\n            <Form.Control\n              type='number'\n              placeholder='Enter countInStock'\n              value={countInStock}\n              onChange={e => setCountInStock(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='description'>\n            <Form.Label>description</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Enter description'\n              value={description}\n              onChange={e => setDescription(e.target.value)}\n            />\n          </Form.Group>\n\n          <Button type='submit' variant='primary'>\n            Update\n          </Button>\n        </Form>\n      </FormContainer>\n    </>\n  )\n}\n\nexport default ProductEditScreen\n","/home/achyuth/Documents/geekcart/frontend/src/components/ProgressBar.js",["192"],"import React, { useEffect } from 'react'\nimport useStorage from '../config/useStorage'\n\nconst ProgressBar = ({ file, setFile, setImage }) => {\n  const { url, progress } = useStorage(file)\n  console.log('progress', progress, url)\n  useEffect(() => {\n    if (url) {\n      setFile(null)\n      setImage(url)\n    }\n  }, [url, setFile])\n  return <div className='progress-bar' style={{ width: progress + '%' }} />\n}\n\nexport default ProgressBar\n","/home/achyuth/Documents/geekcart/frontend/src/config/useStorage.js",[],"/home/achyuth/Documents/geekcart/frontend/src/config/firebase.js",[],"/home/achyuth/Documents/geekcart/frontend/src/reducers/cartReducers.js",[],"/home/achyuth/Documents/geekcart/frontend/src/constants/cartConstants.js",[],"/home/achyuth/Documents/geekcart/frontend/src/screens/CartScreen.js",[],"/home/achyuth/Documents/geekcart/frontend/src/actions/cartActions.js",[],"/home/achyuth/Documents/geekcart/frontend/src/screens/ShippingScreen.js",[],"/home/achyuth/Documents/geekcart/frontend/src/components/CheckOutSteps.js",[],"/home/achyuth/Documents/geekcart/frontend/src/screens/PaymentScreen.js",[],"/home/achyuth/Documents/geekcart/frontend/src/reducers/orderReducers.js",[],"/home/achyuth/Documents/geekcart/frontend/src/constants/orderConstants.js",[],"/home/achyuth/Documents/geekcart/frontend/src/screens/PlaceOrderScreen.js",["193","194"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n  Button,\n  Row,\n  Col,\n  ListGroup,\n  Image,\n  Card,\n  ListGroupItem\n} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport CheckOutSteps from '../components/CheckOutSteps'\nimport Message from '../components/Message'\nimport { createOrder } from '../actions/orderActions'\n\nconst PlaceOrderScreen = ({ history }) => {\n  const dispatch = useDispatch()\n  const cart = useSelector(state => state.cart)\n\n  const addDecimals = num => {\n    return (Math.round(num * 100) / 100).toFixed(2)\n  }\n  // calculate prices\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price + item.quantity, 0)\n  )\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 499 ? 0 : 40)\n  // standarf gst on electronics is 18%\n  cart.taxPrice = addDecimals(Number((0.18 * cart.itemsPrice).toFixed(2)))\n  cart.totalPrice = addDecimals(\n    Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)\n  )\n\n  const orderCreate = useSelector(state => state.orderCreate)\n  const { order, success, error } = orderCreate\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`)\n    }\n    // eslint-disable-next-line\n  }, [history, success])\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice\n      })\n    )\n  }\n  return (\n    <>\n      <CheckOutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Address</strong>\n                {cart.shippingAddress.address},{cart.shippingAddress.city},\n                {cart.shippingAddress.postalCode},{cart.shippingAddress.country}\n                ,\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <strong>Method: </strong>\n              {cart.paymentMethod},\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your Cart is Empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={3}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n\n                        <Col md={4}>\n                          {item.quantity} X &#x20B9;{item.price} = &#x20B9;\n                          {item.quantity * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col> &#x20B9;{cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col> &#x20B9;{cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>GST</Col>\n                  <Col> &#x20B9;{cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col> &#x20B9;{cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <ListGroup.Item>\n                  {error && <Message variant='danger' error={error} />}\n                </ListGroup.Item>\n\n                <Button\n                  type='button'\n                  className='btn-block'\n                  disabled={cart.cartItems === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default PlaceOrderScreen\n","/home/achyuth/Documents/geekcart/frontend/src/actions/orderActions.js",[],"/home/achyuth/Documents/geekcart/frontend/src/screens/OrderScreen.js",["195","196","197"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { Link, Redirect } from 'react-router-dom'\nimport {\n  Button,\n  Row,\n  Col,\n  ListGroup,\n  Image,\n  Card,\n  ListGroupItem\n} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder\n} from '../actions/orderActions'\nimport CheckoutSteps from '../components/CheckOutSteps'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport {\n  ORDER_DELIVER_RESET,\n  ORDER_PAY_RESET\n} from '../constants/orderConstants'\n\nconst OrderScreen = ({ match, history }) => {\n  const orderId = match.params.id\n\n  const [sdkReady, setSdkReady] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const orderDetails = useSelector(state => state.orderDetails)\n  const { order, loading, error } = orderDetails\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  const orderPay = useSelector(state => state.orderPay)\n  const { loading: loadingPay, success: successPay } = orderPay\n\n  const orderDeliver = useSelector(state => state.orderDeliver)\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n  if (!loading) {\n    const addDecimals = num => {\n      return (Math.round(num * 100) / 100).toFixed(2)\n    }\n    // calculate prices\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce(\n        (acc, item) => acc + item.price + item.quantity,\n        0\n      )\n    )\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.pushState('/login')\n    }\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get(\n        'http://localhost:5000/api/config/paypal'\n      )\n      const script = document.createElement('script')\n      script.type = 'text/javascript'\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n      script.async = true\n      script.onload = () => {\n        setSdkReady(true)\n      }\n      document.body.appendChild(script)\n    }\n\n    if (!order || successPay || successDeliver || order._id !== orderId) {\n      dispatch({ type: ORDER_PAY_RESET })\n      dispatch({ type: ORDER_DELIVER_RESET })\n      dispatch(getOrderDetails(orderId))\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript()\n      } else {\n        setSdkReady(true)\n      }\n    }\n  }, [dispatch, order, orderId, successPay, successDeliver])\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order))\n  }\n  const successPaymentHandler = paymentResult => {\n    console.log('paymentResult', paymentResult)\n    dispatch(payOrder(orderId, paymentResult))\n  }\n\n  return (\n    <>\n      {loading && <Loader />}\n      {error && <Message variant='danger' error={error} />}\n      <h1>Order screen</h1>\n      {order && order.orderItems.length === 0 && (\n        <Message\n          variant='danger'\n          error='you dont have any orders to be delivered from our end'\n        />\n      )}\n      {order && (\n        <>\n          <h1>Order {order._id}</h1>\n          <CheckoutSteps step1 step2 step3 step4 />\n          <Row>\n            <Col md={8}>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h2>Shipping</h2>\n                  <p>\n                    <strong>Name: </strong> {order.user.name}\n                  </p>\n                  <p>\n                    <strong>Email: </strong>{' '}\n                    <a href={`mailto:${order.user.email}`}>\n                      {order.user.email}\n                    </a>\n                  </p>\n                  <p>\n                    <Link to='/profile'>profile: {order.user.name}</Link>\n                  </p>\n                  <p>\n                    <strong>Address: </strong>\n                    {order.shippingAddress.address}\n                    {', '}\n                    {order.shippingAddress.city}\n                    {', '}\n                    {order.shippingAddress.postalCode}\n                    {', '}\n                    {order.shippingAddress.country}\n                  </p>\n                  {order.isDelivered ? (\n                    <Message\n                      variant='success'\n                      error={`Delivered on ${order.deliveredAt}`}\n                    />\n                  ) : (\n                    <Message variant='secondary' error='Not Delivered' />\n                  )}\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <h2>Payment Method</h2>\n                  <p>\n                    <strong>Method: </strong>\n                    {order.paymentMethod}\n                  </p>\n                  {order.isPaid ? (\n                    <Message\n                      variant='success'\n                      error={`Paid on ${order.paidAt}`}\n                    />\n                  ) : (\n                    <Message variant='danger' error='Not Paid' />\n                  )}\n                </ListGroup.Item>\n\n                {userInfo &&\n                  userInfo.isAdmin &&\n                  order.isPaid &&\n                  !order.isDelivered && (\n                    <ListGroup.Item>\n                      <Button\n                        className='btn btn-block'\n                        type='button'\n                        onClick={deliverHandler}\n                      >\n                        Delver Item\n                      </Button>\n                    </ListGroup.Item>\n                  )}\n\n                <ListGroup.Item>\n                  <h2>Order Items</h2>\n                  {order.orderItems.length === 0 ? (\n                    <>\n                      <Message>Order is empty</Message>\n                      Try our products ?<Link to='/'>main Page</Link>\n                    </>\n                  ) : (\n                    <ListGroup variant='flush'>\n                      {order.orderItems.map((item, index) => (\n                        <ListGroup.Item key={index}>\n                          <Row>\n                            <Col md={1}>\n                              <Image\n                                src={item.image}\n                                alt={item.name}\n                                fluid\n                                rounded\n                              />\n                            </Col>\n                            <Col>\n                              <Link to={`/product/${item.product}`}>\n                                {item.name}\n                              </Link>\n                            </Col>\n                            <Col md={4}>\n                              {item.quantity} x &#x20B9; {item.price} = $\n                              {item.quantity * item.price}\n                            </Col>\n                          </Row>\n                        </ListGroup.Item>\n                      ))}\n                    </ListGroup>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={4}>\n              <Card>\n                <ListGroup variant='flush'>\n                  <ListGroup.Item>\n                    <h2>Order Summary</h2>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Items</Col>\n                      <Col>&#x20B9; {order.itemsPrice}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Shipping</Col>\n                      <Col>&#x20B9; {order.shippingPrice}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Tax</Col>\n                      <Col>&#x20B9; {order.taxPrice}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Total</Col>\n                      <Col>&#x20B9; {order.totalPrice}</Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {!order.isPaid && (\n                    <>\n                      <ListGroup.Item>\n                        {loadingPay && <Loader />}\n                        {!sdkReady ? (\n                          <Loader />\n                        ) : (\n                          <PayPalButton\n                            amount={order.totalPrice}\n                            onSuccess={successPaymentHandler}\n                          />\n                        )}\n                      </ListGroup.Item>\n                      <ListGroup.Item>\n                        <Button\n                        // onClick = {instaMojoPay}\n                        >\n                          Pay via instamojo\n                        </Button>\n                      </ListGroup.Item>\n                    </>\n                  )}\n\n                  {loadingDeliver && <Loader />}\n                  {userInfo &&\n                    userInfo.role === 1 &&\n                    order.isPaid &&\n                    !order.isDelivered && (\n                      <ListGroup.Item>\n                        <Button\n                          type='button'\n                          className='btn btn-block'\n                          onClick={deliverHandler}\n                        >\n                          Mark As Delivered\n                        </Button>\n                      </ListGroup.Item>\n                    )}\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default OrderScreen\n","/home/achyuth/Documents/geekcart/frontend/src/screens/OrderListScreen.js",["198","199","200"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { listAllOrders } from '../actions/orderActions'\n\nconst OrderListScreen = ({ history, match }) => {\n  const dispatch = useDispatch()\n\n  const orderList = useSelector(state => state.orderList)\n  const { loading, error, orders } = orderList\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(\n    _ => {\n      if (userInfo && userInfo.role > 0) {\n        dispatch(listAllOrders())\n      } else {\n        history.push('/login')\n      }\n    },\n    [dispatch, history, userLogin]\n  )\n\n  return (\n    <>\n      <Row className='align-items-center'>\n        <Col>\n          <h1>Orders</h1>\n        </Col>\n      </Row>\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger' error={error} />\n      ) : (\n        <Table striped boarded hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>Order ID</th>\n              <th>User</th>\n              <th>DATE</th>\n              <th>TOTAL </th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders &&\n              orders.map(order => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.user && order.user.name}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      //FIXME: show the paid at details\n                      <i className='fas fa-check' style={{ color: 'green' }} />\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }} />\n                    )}\n                  </td>\n\n                  <td>\n                    {order.isDelivered ? (\n                      //FIXME: show the delivered at details\n                      <i className='fas fa-check' style={{ color: 'green' }} />\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }} />\n                    )}\n                  </td>\n\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button>Details</Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default OrderListScreen\n","/home/achyuth/Documents/geekcart/frontend/src/screens/UserEditScreen.js",["201","202","203","204"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AiOutlineArrowLeft } from 'react-icons/ai'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { getuserProfile, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id\n\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [role, setRole] = useState(0)\n\n  const dispatch = useDispatch()\n\n  const userProfile = useSelector(state => state.userProfile)\n  const { loading, error, user } = userProfile\n\n  const userUpdate = useSelector(state => state.userUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = userUpdate\n\n  // useEffect(() => {\n  //   if (successUpdate) {\n  //     dispatch({ type: USER_UPDATE_RESET })\n  //     history.push('/admin/userlist')\n  //   } else {\n  //     if (!user || !user.name || user._id !== userId) {\n  //       dispatch(getuserProfile(userId))\n  //     } else {\n  //       setName(user.name)\n  //       setEmail(user.email)\n  //       setRole(user.role)\n  //     }\n  //   }\n  // }, [dispatch, history, userId, user, successUpdate])\n\n  useEffect(() => {\n    if (!user || !user.name) {\n      dispatch(getuserProfile(userId))\n    }\n\n    if (user && user.name) {\n      setName(user.name)\n      setEmail(user.email)\n      setRole(user.role)\n    }\n  }, [dispatch, user, userId, history, successUpdate])\n\n  const submitHandler = e => {\n    e.preventDefault()\n    dispatch(updateUser({ _id: userId, name, email, role }))\n  }\n\n  return (\n    <>\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\n        <AiOutlineArrowLeft /> GoBack\n      </Link>\n\n      <FormContainer>\n        <h1>Edit user</h1>\n\n        {loading && <Loader />}\n        {errorUpdate && <Message variant='danger' error={errorUpdate} />}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger' error={error} />\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Please Enter Your Name'\n                value={name}\n                onChange={e => setName(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter Email'\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId='role'>\n              <Form.Label>Change user Type</Form.Label>\n              <Form.Control as='select'>\n                <option value={0}>Normal User</option>\n                <option value={1}>Admin</option>\n                <option value={2}>Seller</option>\n              </Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default UserEditScreen\n","/home/achyuth/Documents/geekcart/frontend/src/components/Rating.js",[],"/home/achyuth/Documents/geekcart/frontend/src/components/ProductCarousel.js",[],{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","severity":1,"message":"210","line":23,"column":29,"nodeType":"211","messageId":"212","endLine":23,"endColumn":34},{"ruleId":"213","severity":1,"message":"214","line":37,"column":6,"nodeType":"215","endLine":37,"endColumn":38,"suggestions":"216"},{"ruleId":"209","severity":1,"message":"217","line":7,"column":8,"nodeType":"211","messageId":"212","endLine":7,"endColumn":14},{"ruleId":"209","severity":1,"message":"218","line":8,"column":8,"nodeType":"211","messageId":"212","endLine":8,"endColumn":15},{"ruleId":"209","severity":1,"message":"219","line":1,"column":28,"nodeType":"211","messageId":"212","endLine":1,"endColumn":36},{"ruleId":"209","severity":1,"message":"220","line":6,"column":10,"nodeType":"211","messageId":"212","endLine":6,"endColumn":19},{"ruleId":"209","severity":1,"message":"221","line":33,"column":14,"nodeType":"211","messageId":"212","endLine":33,"endColumn":27},{"ruleId":"209","severity":1,"message":"222","line":34,"column":12,"nodeType":"211","messageId":"212","endLine":34,"endColumn":23},{"ruleId":"213","severity":1,"message":"223","line":48,"column":6,"nodeType":"215","endLine":55,"endColumn":4,"suggestions":"224"},{"ruleId":"209","severity":1,"message":"225","line":24,"column":10,"nodeType":"211","messageId":"212","endLine":24,"endColumn":19},{"ruleId":"209","severity":1,"message":"226","line":24,"column":21,"nodeType":"211","messageId":"212","endLine":24,"endColumn":33},{"ruleId":"213","severity":1,"message":"227","line":12,"column":6,"nodeType":"215","endLine":12,"endColumn":20,"suggestions":"228"},{"ruleId":"209","severity":1,"message":"219","line":1,"column":17,"nodeType":"211","messageId":"212","endLine":1,"endColumn":25},{"ruleId":"209","severity":1,"message":"229","line":10,"column":3,"nodeType":"211","messageId":"212","endLine":10,"endColumn":16},{"ruleId":"209","severity":1,"message":"230","line":3,"column":16,"nodeType":"211","messageId":"212","endLine":3,"endColumn":24},{"ruleId":"209","severity":1,"message":"229","line":11,"column":3,"nodeType":"211","messageId":"212","endLine":11,"endColumn":16},{"ruleId":"213","severity":1,"message":"231","line":89,"column":6,"nodeType":"215","endLine":89,"endColumn":60,"suggestions":"232"},{"ruleId":"209","severity":1,"message":"219","line":1,"column":17,"nodeType":"211","messageId":"212","endLine":1,"endColumn":25},{"ruleId":"209","severity":1,"message":"233","line":2,"column":10,"nodeType":"211","messageId":"212","endLine":2,"endColumn":14},{"ruleId":"213","severity":1,"message":"234","line":27,"column":5,"nodeType":"215","endLine":27,"endColumn":35,"suggestions":"235"},{"ruleId":"209","severity":1,"message":"236","line":3,"column":24,"nodeType":"211","messageId":"212","endLine":3,"endColumn":27},{"ruleId":"209","severity":1,"message":"237","line":3,"column":29,"nodeType":"211","messageId":"212","endLine":3,"endColumn":32},{"ruleId":"209","severity":1,"message":"238","line":10,"column":10,"nodeType":"211","messageId":"212","endLine":10,"endColumn":27},{"ruleId":"209","severity":1,"message":"239","line":26,"column":14,"nodeType":"211","messageId":"212","endLine":26,"endColumn":27},"no-native-reassign",["240"],"no-negated-in-lhs",["241"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["242"],"'Loader' is defined but never used.","'Message' is defined but never used.","'useState' is defined but never used.","'listUsers' is defined but never used.","'loadingCreate' is assigned a value but never used.","'errorCreate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'createdProduct._id'. Either include it or remove the dependency array.",["243"],"'uploading' is assigned a value but never used.","'setUploading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setImage'. Either include it or remove the dependency array. If 'setImage' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["244"],"'ListGroupItem' is defined but never used.","'Redirect' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["245"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["246"],"'Row' is defined but never used.","'Col' is defined but never used.","'USER_UPDATE_RESET' is defined but never used.","'loadingUpdate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},"Update the dependencies array to be: [dispatch, match.params.id, successProductReview]",{"range":"257","text":"258"},"Update the dependencies array to be: [dispatch, history, userInfo, successDelete, successCreate, createdProduct._id]",{"range":"259","text":"260"},"Update the dependencies array to be: [url, setFile, setImage]",{"range":"261","text":"262"},"Update the dependencies array to be: [dispatch, order, orderId, successPay, successDeliver, userInfo, history]",{"range":"263","text":"264"},"Update the dependencies array to be: [dispatch, history, userInfo, userLogin]",{"range":"265","text":"266"},[1219,1251],"[dispatch, match.params.id, successProductReview]",[1360,1465],"[dispatch, history, userInfo, successDelete, successCreate, createdProduct._id]",[315,329],"[url, setFile, setImage]",[2463,2517],"[dispatch, order, orderId, successPay, successDeliver, userInfo, history]",[850,880],"[dispatch, history, userInfo, userLogin]"]